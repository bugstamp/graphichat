{"version":3,"sources":["webpack:///./client/assets/images/login-bg.jpg","webpack:///./client/components/common/LoginForm.js","webpack:///./client/components/common/Login.js"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","Paper","withConfig","displayName","componentId","getPadding","Title","Typography","AccountIconWrapper","div","position","Form","form","TextField","FormControl","SubmitButton","Button","SignUpButton","BrandIconsWrapper","BrandIconElement","_ref","brandColor","_ref2","rgba","formFields","id","label","type","placeholder","autocomplete","required","brandIcons","color","iconElement","faFacebook","faGoogle","faGithub","LoginForm","showPassword","_this","setState","_ref3","Component","_this2","this","state","react_default","a","createElement","elevation","variant","align","gutterBottom","AccountCircleRounded_default","fontSize","onSubmit","event","preventDefault","map_default","_ref4","isPasswordField","verifiedType","key","fullWidth","InputLabel_default","htmlFor","Input_default","autoComplete","endAdornment","InputAdornment_default","IconButton_default","onClick","toggleShowPassword","VisibilityRounded_default","VisibilityOffRounded_default","size","_ref5","brand","Fab_default","index_es","icon","Grid","backgrounds","concat","bgImage","Login","Login_Wrapper","justify","alignItems","container","common_LoginForm"],"mappings":"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","file":"3.0cf5f696f11b5ab6b0c1.js","sourcesContent":["module.exports = __webpack_public_path__ + \"assets/images/login-bg.jpg\";","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport VisibilityIcon from '@material-ui/icons/VisibilityRounded';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOffRounded';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFacebook, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport styled from 'styled-components';\r\nimport { map } from 'lodash';\r\nimport { position, rgba } from 'polished';\r\n\r\nimport { getStyledProps, getPadding } from '../../styles';\r\n\r\nconst Wrapper = styled(Paper)`\r\n  && {\r\n    width: 100%;\r\n    max-width: 450px;\r\n    min-width: 375px;\r\n    padding: ${getPadding(5)} ${getPadding(3)};\r\n  }\r\n`;\r\n\r\nconst Title = styled(Typography)`\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst AccountIconWrapper = styled.div`\r\n  ${position('absolute', '0', null, null, '20%')}\r\n  height: 100%;\r\n  font-size: inherit;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n`;\r\n\r\nconst TextField = styled(FormControl)`\r\n  && {\r\n    margin-bottom: 1em;\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled(Button)`\r\n  && {\r\n    margin-top: 1em;\r\n  }\r\n`;\r\n\r\nconst SignUpButton = styled(Button)`\r\n  && {\r\n    margin-top: 1em;\r\n  }\r\n`;\r\n\r\nconst BrandIconsWrapper = styled.div`\r\n  width: 100%;\r\n  height: 62px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  margin-top: 3em;\r\n`;\r\n\r\nconst BrandIconElement = styled.div`\r\n  display: inline-flex;\r\n\r\n  :not(:last-child) {\r\n    margin-right: 2em;\r\n  }\r\n\r\n  :nth-child(2) {\r\n    align-self: flex-end;\r\n  }\r\n\r\n  button {\r\n    color: #fff;\r\n    background-color: ${({ brandColor }) => brandColor};\r\n\r\n    :hover {\r\n      background-color: ${({ brandColor }) => rgba(brandColor, 0.7)};\r\n    }\r\n  }\r\n`;\r\n\r\nconst formFields = {\r\n  login: [\r\n    {\r\n      id: 'username',\r\n      label: 'Username',\r\n      type: 'text',\r\n      placeholder: 'Username or email',\r\n      autocomplete: 'on',\r\n      required: true,\r\n    },\r\n    {\r\n      id: 'password',\r\n      label: 'Password',\r\n      type: 'password',\r\n      placeholder: '******',\r\n      autocomplete: 'on',\r\n      required: true,\r\n    },\r\n  ],\r\n};\r\n\r\nconst brandIcons = [\r\n  {\r\n    id: 'facebook',\r\n    color: 'blue',\r\n    iconElement: faFacebook,\r\n  },\r\n  {\r\n    id: 'google',\r\n    color: 'red',\r\n    iconElement: faGoogle,\r\n  },\r\n  {\r\n    id: 'github',\r\n    color: 'black',\r\n    iconElement: faGithub,\r\n  },\r\n];\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    showPassword: false,\r\n  }\r\n\r\n  toggleShowPassword = () => {\r\n    this.setState(({ showPassword }) => ({ showPassword: !showPassword }));\r\n  }\r\n\r\n  render() {\r\n    const { showPassword } = this.state;\r\n\r\n    return (\r\n      <Wrapper brandColor=\"piska\" elevation={8}>\r\n        <Title\r\n          color=\"primary\"\r\n          variant=\"h3\"\r\n          align=\"center\"\r\n          gutterBottom\r\n        >\r\n          <AccountIconWrapper>\r\n            <AccountCircleIcon fontSize=\"inherit\" color=\"primary\" />\r\n          </AccountIconWrapper>\r\n          {'Sign In'}\r\n        </Title>\r\n        <Form onSubmit={(event) => { event.preventDefault(); }}>\r\n          {\r\n            map(formFields.login, ({\r\n              id,\r\n              label,\r\n              type,\r\n              placeholder,\r\n              autocomplete,\r\n              required,\r\n            }) => {\r\n              const isPasswordField = type === 'password';\r\n              const verifiedType = (isPasswordField && showPassword)\r\n                ? 'text'\r\n                : type;\r\n\r\n              return (\r\n                <TextField\r\n                  key={id}\r\n                  required={required}\r\n                  fullWidth\r\n                >\r\n                  <InputLabel htmlFor={id}>{label}</InputLabel>\r\n                  <Input\r\n                    id={id}\r\n                    type={verifiedType}\r\n                    placeholder={placeholder}\r\n                    autoComplete={autocomplete}\r\n                    endAdornment={(\r\n                      <Choose>\r\n                        <When condition={isPasswordField}>\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton onClick={this.toggleShowPassword}>\r\n                              <Choose>\r\n                                <When condition={showPassword}>\r\n                                  <VisibilityIcon />\r\n                                </When>\r\n                                <Otherwise>\r\n                                  <VisibilityOffIcon />\r\n                                </Otherwise>\r\n                              </Choose>\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        </When>\r\n                        <Otherwise>{null}</Otherwise>\r\n                      </Choose>\r\n                    )}\r\n                  />\r\n                </TextField>\r\n              );\r\n            })\r\n          }\r\n          <SubmitButton\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n          >\r\n            {'Sign In'}\r\n          </SubmitButton>\r\n          <SignUpButton\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          >\r\n            {'Sign Up'}\r\n          </SignUpButton>\r\n          <BrandIconsWrapper>\r\n            {\r\n              map(brandIcons, ({ id, color, iconElement }) => (\r\n                <BrandIconElement\r\n                  key={id}\r\n                  brand={id}\r\n                  brandColor={color}\r\n                >\r\n                  <Fab size=\"large\">\r\n                    <FontAwesomeIcon icon={iconElement} size=\"lg\" />\r\n                  </Fab>\r\n                </BrandIconElement>\r\n              ))\r\n            }\r\n          </BrandIconsWrapper>\r\n        </Form>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styled from 'styled-components';\r\nimport { backgrounds } from 'polished';\r\n\r\nimport LoginForm from './LoginForm';\r\nimport bgImage from '../../assets/images/login-bg.jpg';\r\n\r\nconst Wrapper = styled(Grid)`\r\n  flex: 1 auto;\r\n  ${backgrounds(`url(${bgImage})`, 'center no-repeat')}\r\n  background-size: cover;\r\n`;\r\n\r\nclass Login extends Component {\r\n  state = {}\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n      >\r\n        <LoginForm />\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}