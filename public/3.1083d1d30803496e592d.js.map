{"version":3,"sources":["webpack:///./src/components/common/Navigation/Tabs.js","webpack:///./src/components/pages/MainContent.js","webpack:///./src/components/layouts/AppLayout.js","webpack:///./src/components/common/Logo.js","webpack:///./src/components/common/Navigation/Navigation.js","webpack:///./src/components/pages/SettingsDialog.js"],"names":["Wrapper","styled","div","withConfig","displayName","componentId","TabItem","Tab","TabItemIndicator","span","activeTab","getStyledProps","links","name","Icon","PersonIcon","to","Tabs","onChangeTab","toggleSettingsDialog","signOut","logoutIconColor","red","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","lodash_map__WEBPACK_IMPORTED_MODULE_0___default","index","color","key","component","Link","icon","onClick","_material_ui_icons_SettingsRounded__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_ExitToAppRounded__WEBPACK_IMPORTED_MODULE_8___default","htmlColor","propTypes","PropTypes","number","isRequired","func","__webpack_exports__","MainContainer","Paper","size","MainContent","Component","[object Object]","args","super","this","state","settingsDialog","componentDidUpdate","prevProps","sessionExpired","toggleNotification","props","lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default","setState","me","id","variables","userId","render","children","loading","avatarUploading","uploadAvatar","avatar","getAvatar","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_5__","container","spacing","justify","item","xs","lg","square","_material_ui_core_Hidden__WEBPACK_IMPORTED_MODULE_7__","smDown","_common_Navigation_Navigation__WEBPACK_IMPORTED_MODULE_9__","cloneElement","initialLoading","_SettingsDialog__WEBPACK_IMPORTED_MODULE_8__","open","toggle","code","eval","defaultProps","oneOfType","element","node","bool","shape","meProps","withNotification","AppLayout","react__WEBPACK_IMPORTED_MODULE_0___default","_containers_AppLayoutContainer__WEBPACK_IMPORTED_MODULE_5__","getInitialData","data","mutation","result","checkSessionExpiration","_pages_MainContent__WEBPACK_IMPORTED_MODULE_6__","history","objectOf","any","client","hot","module","withApollo","withRouter","top","rest","_material_ui_icons_ChatBubbleRounded__WEBPACK_IMPORTED_MODULE_2___default","blue","indigo","Logo","fontSize","getSpacing","Navigation","PureComponent","handleChangeTab","_Logo__WEBPACK_IMPORTED_MODULE_4__","_Tabs__WEBPACK_IMPORTED_MODULE_3__","DialogContent","MaterialDialogContent","AvatarWrapper","Avatar","MaterialAvatar","SettingsDialog","avatarInput","createRef","onChangeAvatar","async","target","files","file","validity","valid","onAvatarClick","current","click","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_3__","onClose","_common_TopProgressLine__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_4__","ref","type","accept","onChange","style","display","src","alt","text","_material_ui_icons_CameraAlt__WEBPACK_IMPORTED_MODULE_7___default","string"],"mappings":"oeAkBA,MAGMA,EAAUC,UAAOC,IAAVC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAAGJ,CAAH,oHAYPK,EAAUL,kBAAOM,KAAVJ,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAAGJ,CAAH,wDAdY,QAsBnBO,EAAmBP,UAAOQ,KAAVN,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGJ,CAAH,oHAtBG,OA2BhB,EAAGS,kBA5BU,GA4BSA,MAETC,YAAe,+BAI/BC,EAAQ,CACZ,CACEC,KAAM,QACNC,KAAMC,IACNC,GAAI,UAcFC,EAAO,EACXP,YACAQ,cACAC,uBACAC,cAEA,MAAMC,EAAkBC,IAAI,KAE5B,OACEC,EAAAC,EAAAC,cAACzB,EAAD,KACG0B,IAAId,EAAO,EAAGC,OAAMC,OAAME,MAAMW,KAC/B,MAAMC,EAAQlB,IAAciB,EAAQ,UAAY,SAEhD,OACEJ,EAAAC,EAAAC,cAACnB,EAAD,CACEuB,IAAKhB,EACLG,GAAIA,EACJc,UAAWC,IACXC,KAAMT,EAAAC,EAAAC,cAACX,EAAD,CAAMc,MAAOA,IACnBK,QAAS,IAAMf,EAAYS,OAIjCJ,EAAAC,EAAAC,cAACnB,EAAD,CAAS0B,KAAMT,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAcI,MAAM,WAAaK,QAASd,IACzDI,EAAAC,EAAAC,cAACnB,EAAD,CAAS0B,KAAMT,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYY,UAAWf,IAAqBY,QAASb,IACpEG,EAAAC,EAAAC,cAACjB,EAAD,CAAkBE,UAAWA,MAKnCO,EAAKoB,UAAY,CACf3B,UAAW4B,IAAUC,OAAOC,WAC5BtB,YAAaoB,IAAUG,KAAKD,WAC5BrB,qBAAsBmB,IAAUG,KAAKD,WACrCpB,QAASkB,IAAUG,KAAKD,oBAGXvB,UAAAyB,EAAA,uGAzFO,wGACG,8GAEnB1C,iGAYAM,iGAQAE,0GAWAI,+FAkBAK,i8DCrDN,MAAM0B,cAAgB1C,+DAAO2C,wDAAVzC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,sBACf4C,gDAAK,SAIT,MAAMC,oBAAoBC,6CAAUC,eAAAC,GAAAC,SAAAD,GAAAE,KAClCC,MAAQ,CACNC,gBAAgB,GAFgBF,KAKlCG,mBAAsBC,IACpB,MAAMC,eAAEA,EAAFC,mBAAkBA,GAAuBN,KAAKO,OAE/CC,sDAAQJ,EAAUC,eAAgBA,IAAmBA,IACxDL,KAAK/B,UACLqC,EAAmB,gCAVWN,KAclChC,qBAAuB,KACrBgC,KAAKS,SAAS,EAAGP,qBAAH,CAA2BA,gBAAiBA,MAf1BF,KAkBlC/B,QAAU,KACR,MAAMyC,GAAEA,EAAFzC,QAAMA,GAAY+B,KAAKO,OACvBI,GAAEA,GAAOD,EAEfzC,EAAQ,CAAE2C,UAAW,CAAEC,OAAQF,MAGjCG,SACE,MAAMZ,eAAEA,GAAmBF,KAAKC,OAC1Bc,SACJA,EADIC,QAEJA,EAFIN,GAGJA,EAHIO,gBAIJA,EAJIC,aAKJA,GACElB,KAAKO,MACHY,EAASC,iDAAUV,EAAI,MAE7B,OACEtC,2CAAAC,EAAAC,cAAC+C,oDAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,UAClCpD,2CAAAC,EAAAC,cAAC+C,oDAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrBvD,2CAAAC,EAAAC,cAACkB,cAAD,CAAeoC,QAAM,GACnBxD,2CAAAC,EAAAC,cAAC+C,oDAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvBnD,2CAAAC,EAAAC,cAACuD,sDAAA,EAAD,CAAQC,QAAM,GACZ1D,2CAAAC,EAAAC,cAAC+C,oDAAA,EAAD,CAAMI,MAAI,GACRrD,2CAAAC,EAAAC,cAACyD,2DAAA,EAAD,CACE/D,qBAAsBgC,KAAKhC,qBAC3BC,QAAS+B,KAAK/B,YAIpBG,2CAAAC,EAAAC,cAAC+C,oDAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,GACVM,wDAAajB,EAAU,CAAEkB,eAAgBjB,QAKlD5C,2CAAAC,EAAAC,cAAC4D,6CAAA,EAAD,CACEC,KAAMjC,EACNkC,OAAQpC,KAAKhC,qBACbmD,OAAQA,EACRF,gBAAiBA,EACjBC,aAAcA,KA5DYrB,iCAAAnB,IAAA2D,MAAArC,KAAAtB,KAAA4D,KAAAD,OAmEpC1C,YAAY4C,aAAe,CACzB7B,GAAI,IAENf,YAAYT,UAAY,CACtB6B,SAAU5B,kDAAUqD,UAAU,CAACrD,kDAAUsD,QAAStD,kDAAUuD,OAAOrD,WACnE2B,QAAS7B,kDAAUwD,KAAKtD,WACxBqB,GAAIvB,kDAAUyD,MAAMC,4CACpBxC,eAAgBlB,kDAAUwD,KAAKtD,WAC/B4B,gBAAiB9B,kDAAUwD,KAAKtD,WAChCpB,QAASkB,kDAAUG,KAAKD,WACxB6B,aAAc/B,kDAAUG,KAAKD,WAC7BiB,mBAAoBnB,kDAAUG,KAAKD,2BAGtByD,qEAAiBnD,4CAAjBJ,oBAAA,uKAtFTC,0HAKAG,qoDCbN,MAAMoD,kBAAkBnD,6CACtBkB,SACE,MAAMC,SAAEA,GAAaf,KAAKO,MAE1B,OACEyC,2CAAA3E,EAAAC,cAAC2E,4DAAA,EAAD,KACG,EACCC,gBACEC,MAAQzC,MACRM,WAEF/C,SACEmF,SAAUnF,GAEZiD,cACEkC,SAAUlC,EACVmC,QACErC,QAASC,IAGbqC,wBACEH,MACE9C,kBAAiB,OAKnB2C,2CAAA3E,EAAAC,cAACiF,gDAAA,EAAD,CACEvC,QAASA,EACTN,GAAIA,EACJzC,QAASA,EACTgD,gBAAiBA,EACjBC,aAAcA,EACdb,eAAgBA,GAEfU,IAnCmBlB,iCAAAnB,IAAA2D,MAAArC,KAAAtB,KAAA4D,KAAAD,OA4ClCU,UAAU7D,UAAY,CACpB6B,SAAU5B,kDAAUqD,UAAU,CAACrD,kDAAUsD,QAAStD,kDAAUuD,OAAOrD,WACnEmE,QAASrE,kDAAUsE,SAAStE,kDAAUuE,KAAKrE,WAC3CsE,OAAQxE,kDAAUsE,SAAStE,kDAAUuE,KAAKrE,2BAG7BuE,0DAAIC,OAAJD,CAAYE,oDAAWC,oDAAWhB,4CAAlCxD,oBAAA,6KAlDTwD,stBCFN,MAAMlG,EAAUC,UAAOC,IAAVC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAAGJ,CAAH,6HAUPa,EAAOb,kBAAO,EAAGkH,SAAQC,KAAWjB,EAAA3E,EAAAC,cAAC4F,EAAA7F,EAAmB4F,IAApDjH,WAAA,CAAAC,YAAA,aAAAC,YAAA,eAAGJ,CAAH,kCAEG,EAAGkH,SAAWA,EAAMG,IAAK,KAAOC,IAAO,KACrC,EAAGJ,SAAWA,EAAM,EAAI,GAEjC,EAAGA,SAAUA,GAAQ,4GASrBK,EAAO,IACXrB,EAAA3E,EAAAC,cAACzB,EAAD,KACEmG,EAAA3E,EAAAC,cAACX,EAAD,CAAM2G,SAAS,UAAUN,KAAG,IAC5BhB,EAAA3E,EAAAC,cAACX,EAAD,CAAM2G,SAAS,eAIJD,UAAA9E,EAAA,uGA/BT1C,qFAUAc,kFAcA0G,mvCCpBN,MAAMxH,QAAUC,uDAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,gCAEIyH,+CAAW,IAG5B,MAAMC,mBAAmBC,iDAAc5E,eAAAC,GAAAC,SAAAD,GAAAE,KACrCC,MAAQ,CACN1C,UAAW,GAFwByC,KAKrC0E,gBAAmBlG,IACjBwB,KAAKS,SAAS,CAAElD,UAAWiB,KAG7BsC,SACE,MAAMvD,UAAEA,GAAcyC,KAAKC,OACrBjC,qBAAEA,EAAFC,QAAwBA,GAAY+B,KAAKO,MAE/C,OACEyC,2CAAA3E,EAAAC,cAACzB,QAAD,KACEmG,2CAAA3E,EAAAC,cAACqG,mCAAA,EAAD,MACA3B,2CAAA3E,EAAAC,cAACsG,mCAAA,EAAD,CACErH,UAAWA,EACXQ,YAAaiC,KAAK0E,gBAClB1G,qBAAsBA,EACtBC,QAASA,KApBoB4B,iCAAAnB,IAAA2D,MAAArC,KAAAtB,KAAA4D,KAAAD,OA2BvCmC,WAAWtF,UAAY,CACrBlB,qBAAsBmB,kDAAUG,KAAKD,WACrCpB,QAASkB,kDAAUG,KAAKD,2BAGXmF,0CAAAjF,oBAAA,uKArCT1C,0HAKA2H,q1DCHN,MAAMK,cAAgB/H,+DAAOgI,gEAAV9H,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAAGJ,CAAH,0BAMbiI,cAAgBjI,uDAAOC,IAAVC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAAGJ,CAAH,+DAObkI,OAASlI,+DAAOmI,yDAAVjI,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGJ,CAAH,gDAQZ,MAAMoI,uBAAuBT,iDAAc5E,eAAAC,GAAAC,SAAAD,GAAAE,KACzCmF,YAAcC,uDAD2BpF,KAGzCqF,eAAiBC,OACfC,QACEC,OAAQC,GACRC,UAAYC,cAGd,MAAMzE,aAAEA,GAAiBlB,KAAKO,MAE1BoF,GACFzE,EAAa,CAAEN,UAAW,CAAE6E,WAZSzF,KAgBzC4F,cAAgB,KACV5F,KAAKmF,aACPnF,KAAKmF,YAAYU,QAAQC,SAI7BhF,SACE,MAAMqB,KACJA,EADIC,OAEJA,EAFIjB,OAGJA,EAHIF,gBAIJA,GACEjB,KAAKO,MAET,OACEyC,2CAAA3E,EAAAC,cAACyH,sDAAA,EAAD,CAAQ5D,KAAMA,EAAM6D,QAAS5D,GAC3BY,2CAAA3E,EAAAC,cAAC2H,qDAAA,EAAD,CAAiBjF,QAASC,IAC1B+B,2CAAA3E,EAAAC,cAAC4H,2DAAA,EAAD,iBACAlD,2CAAA3E,EAAAC,cAACuG,cAAD,KACE7B,2CAAA3E,EAAAC,cAACyG,cAAD,KACE/B,2CAAA3E,EAAAC,cAAA,SACE6H,IAAKnG,KAAKmF,YACViB,KAAK,OACLC,OAAO,mCACPC,SAAUtG,KAAKqF,eACfkB,MAAO,CAAEC,QAAS,UAEpBxD,2CAAA3E,EAAAC,cAAC0G,OAAD,CACEyB,IAAKtF,EAAOsF,IACZC,IAAKvF,EAAOwF,KACZ7H,QAASkB,KAAK4F,eAEd5C,2CAAA3E,EAAAC,cAACsI,kEAAAvI,EAAD,CAAYiG,SAAS,cAhDQzE,iCAAAnB,IAAA2D,MAAArC,KAAAtB,KAAA4D,KAAAD,OAyD3C6C,eAAehG,UAAY,CACzBiD,KAAMhD,kDAAUwD,KAAKtD,WACrB+C,OAAQjD,kDAAUG,KAAKD,WACvB8B,OAAQhC,kDAAUyD,MAAM,CACtB6D,IAAKtH,kDAAU0H,OACfF,KAAMxH,kDAAU0H,SACfxH,WACH4B,gBAAiB9B,kDAAUwD,KAAKtD,WAChC6B,aAAc/B,kDAAUG,KAAKD,2BAGhB6F,8CAAA3F,oBAAA,uKAzFTsF,6HAMAE,6HAOAC,+GAQAE","file":"3.1083d1d30803496e592d.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { map } from 'lodash';\r\n\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport PersonIcon from '@material-ui/icons/PersonRounded';\r\n// import GroupIcon from '@material-ui/icons/GroupRounded';\r\n// import BookmarkIcon from '@material-ui/icons/BookmarkRounded';\r\nimport SettingsIcon from '@material-ui/icons/SettingsRounded';\r\nimport LogoutIcon from '@material-ui/icons/ExitToAppRounded';\r\n\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nimport { getStyledProps } from '../../../styles';\r\n\r\nconst tabItemHeight = 60;\r\nconst tabItemHeightPx = `${tabItemHeight}px`;\r\n\r\nconst Wrapper = styled.div`\r\n  min-width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  flex-flow: column;\r\n  position: relative;\r\n\r\n  a:last-of-type {\r\n    margin-bottom: 100%;\r\n  }\r\n`;\r\n\r\nconst TabItem = styled(Tab)`\r\n  && {\r\n    min-width: inherit;\r\n    height: ${tabItemHeightPx};\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst TabItemIndicator = styled.span`\r\n  width: 2px;\r\n  height: ${tabItemHeightPx};\r\n  display: block;\r\n  position: absolute;\r\n  top: ${({ activeTab }) => `${activeTab * tabItemHeight}px`};\r\n  right: 0;\r\n  background-color: ${getStyledProps('theme.palette.primary.main')};\r\n  transition: .25s ease;\r\n`;\r\n\r\nconst links = [\r\n  {\r\n    name: 'chats',\r\n    Icon: PersonIcon,\r\n    to: 'chats',\r\n  },\r\n  // {\r\n  //   name: 'group',\r\n  //   Icon: GroupIcon,\r\n  //   to: 'group',\r\n  // },\r\n  // {\r\n  //   name: 'saved',\r\n  //   Icon: BookmarkIcon,\r\n  //   to: 'saved',\r\n  // },\r\n];\r\n\r\nconst Tabs = ({\r\n  activeTab,\r\n  onChangeTab,\r\n  toggleSettingsDialog,\r\n  signOut,\r\n}) => {\r\n  const logoutIconColor = red[900];\r\n\r\n  return (\r\n    <Wrapper>\r\n      {map(links, ({ name, Icon, to }, index) => {\r\n        const color = activeTab === index ? 'primary' : 'action';\r\n\r\n        return (\r\n          <TabItem\r\n            key={name}\r\n            to={to}\r\n            component={Link}\r\n            icon={<Icon color={color} />}\r\n            onClick={() => onChangeTab(index)}\r\n          />\r\n        );\r\n      })}\r\n      <TabItem icon={<SettingsIcon color=\"action\" />} onClick={toggleSettingsDialog} />\r\n      <TabItem icon={<LogoutIcon htmlColor={logoutIconColor} />} onClick={signOut} />\r\n      <TabItemIndicator activeTab={activeTab} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nTabs.propTypes = {\r\n  activeTab: PropTypes.number.isRequired,\r\n  onChangeTab: PropTypes.func.isRequired,\r\n  toggleSettingsDialog: PropTypes.func.isRequired,\r\n  signOut: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { Component, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { size } from 'polished';\r\nimport { isEqual } from 'lodash';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport SettingsDialog from './SettingsDialog';\r\nimport Navigation from '../common/Navigation/Navigation';\r\nimport withNotification from '../common/HOC/withNotification';\r\n\r\nimport { getAvatar } from '../../helpers';\r\nimport { meProps } from '../propTypes';\r\n\r\nconst MainContainer = styled(Paper)`\r\n  ${size('100%')};\r\n  display: flex;\r\n`;\r\n\r\nclass MainContent extends Component {\r\n  state = {\r\n    settingsDialog: false,\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    const { sessionExpired, toggleNotification } = this.props;\r\n\r\n    if (!isEqual(prevProps.sessionExpired, sessionExpired) && sessionExpired) {\r\n      this.signOut();\r\n      toggleNotification('SessionExpired was expired');\r\n    }\r\n  }\r\n\r\n  toggleSettingsDialog = () => {\r\n    this.setState(({ settingsDialog }) => ({ settingsDialog: !settingsDialog }));\r\n  }\r\n\r\n  signOut = () => {\r\n    const { me, signOut } = this.props;\r\n    const { id } = me;\r\n\r\n    signOut({ variables: { userId: id } });\r\n  }\r\n\r\n  render() {\r\n    const { settingsDialog } = this.state;\r\n    const {\r\n      children,\r\n      loading,\r\n      me,\r\n      avatarUploading,\r\n      uploadAvatar,\r\n    } = this.props;\r\n    const avatar = getAvatar(me, 'md');\r\n\r\n    return (\r\n      <Grid container spacing={0} justify=\"center\">\r\n        <Grid item xs={12} lg={10}>\r\n          <MainContainer square>\r\n            <Grid container spacing={0}>\r\n              <Hidden smDown>\r\n                <Grid item>\r\n                  <Navigation\r\n                    toggleSettingsDialog={this.toggleSettingsDialog}\r\n                    signOut={this.signOut}\r\n                  />\r\n                </Grid>\r\n              </Hidden>\r\n              <Grid item xs>\r\n                {cloneElement(children, { initialLoading: loading })}\r\n              </Grid>\r\n            </Grid>\r\n          </MainContainer>\r\n        </Grid>\r\n        <SettingsDialog\r\n          open={settingsDialog}\r\n          toggle={this.toggleSettingsDialog}\r\n          avatar={avatar}\r\n          avatarUploading={avatarUploading}\r\n          uploadAvatar={uploadAvatar}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nMainContent.defaultProps = {\r\n  me: {},\r\n};\r\nMainContent.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  me: PropTypes.shape(meProps),\r\n  sessionExpired: PropTypes.bool.isRequired,\r\n  avatarUploading: PropTypes.bool.isRequired,\r\n  signOut: PropTypes.func.isRequired,\r\n  uploadAvatar: PropTypes.func.isRequired,\r\n  toggleNotification: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withNotification(MainContent);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { hot } from 'react-hot-loader';\r\nimport { withRouter } from 'react-router';\r\nimport { withApollo } from 'react-apollo';\r\n\r\nimport AppLayoutContainer from '../containers/AppLayoutContainer';\r\nimport MainContent from '../pages/MainContent';\r\n\r\nclass AppLayout extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <AppLayoutContainer>\r\n        {({\r\n          getInitialData: {\r\n            data: { me },\r\n            loading,\r\n          },\r\n          signOut: {\r\n            mutation: signOut,\r\n          },\r\n          uploadAvatar: {\r\n            mutation: uploadAvatar,\r\n            result: {\r\n              loading: avatarUploading,\r\n            },\r\n          },\r\n          checkSessionExpiration: {\r\n            data: {\r\n              sessionExpired = false,\r\n            },\r\n          },\r\n        }) => {\r\n          return (\r\n            <MainContent\r\n              loading={loading}\r\n              me={me}\r\n              signOut={signOut}\r\n              avatarUploading={avatarUploading}\r\n              uploadAvatar={uploadAvatar}\r\n              sessionExpired={sessionExpired}\r\n            >\r\n              {children}\r\n            </MainContent>\r\n          );\r\n        }}\r\n      </AppLayoutContainer>\r\n    );\r\n  }\r\n}\r\n\r\nAppLayout.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\r\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\r\n  client: PropTypes.objectOf(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default hot(module)(withApollo(withRouter(AppLayout)));\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubbleRounded';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 60px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  font-size: 35px;\r\n  margin-bottom: 100%;\r\n`;\r\n\r\nconst Icon = styled(({ top, ...rest }) => <ChatBubbleIcon {...rest} />)`\r\n  && {\r\n    color: ${({ top }) => (top ? blue[500] : indigo[500])};\r\n    opacity: ${({ top }) => (top ? 1 : 0.5)};\r\n\r\n    ${({ top }) => top && `\r\n      position: absolute;\r\n      top: 10%;\r\n      left: 50%;\r\n      transform: translateX(-40%);\r\n    `}\r\n  }\r\n`;\r\n\r\nconst Logo = () => (\r\n  <Wrapper>\r\n    <Icon fontSize=\"inherit\" top />\r\n    <Icon fontSize=\"inherit\" />\r\n  </Wrapper>\r\n);\r\n\r\nexport default Logo;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n// import {} from 'polished';\r\n// import {} from 'lodash';\r\n\r\nimport Tabs from './Tabs';\r\nimport Logo from '../Logo';\r\n\r\nimport { getSpacing } from '../../../styles';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 60px;\r\n  padding-top: ${getSpacing(2)};\r\n`;\r\n\r\nclass Navigation extends PureComponent {\r\n  state = {\r\n    activeTab: 0,\r\n  }\r\n\r\n  handleChangeTab = (index) => {\r\n    this.setState({ activeTab: index });\r\n  }\r\n\r\n  render() {\r\n    const { activeTab } = this.state;\r\n    const { toggleSettingsDialog, signOut } = this.props;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <Logo />\r\n        <Tabs\r\n          activeTab={activeTab}\r\n          onChangeTab={this.handleChangeTab}\r\n          toggleSettingsDialog={toggleSettingsDialog}\r\n          signOut={signOut}\r\n        />\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  toggleSettingsDialog: PropTypes.func.isRequired,\r\n  signOut: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { PureComponent, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n// import {} from 'polished';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MaterialDialogContent from '@material-ui/core/DialogContent';\r\nimport MaterialAvatar from '@material-ui/core/Avatar';\r\nimport CameraIcon from '@material-ui/icons/CameraAlt';\r\n\r\nimport TopProgressLine from '../common/TopProgressLine';\r\n\r\nconst DialogContent = styled(MaterialDialogContent)`\r\n  && {\r\n    min-width: 400px;\r\n  }\r\n`;\r\n\r\nconst AvatarWrapper = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n`;\r\n\r\nconst Avatar = styled(MaterialAvatar)`\r\n  && {\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nclass SettingsDialog extends PureComponent {\r\n  avatarInput = createRef();\r\n\r\n  onChangeAvatar = async ({\r\n    target: {\r\n      files: [file],\r\n      validity: { valid },\r\n    },\r\n  }) => {\r\n    const { uploadAvatar } = this.props;\r\n\r\n    if (valid) {\r\n      uploadAvatar({ variables: { file } });\r\n    }\r\n  }\r\n\r\n  onAvatarClick = () => {\r\n    if (this.avatarInput) {\r\n      this.avatarInput.current.click();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      open,\r\n      toggle,\r\n      avatar,\r\n      avatarUploading,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Dialog open={open} onClose={toggle}>\r\n        <TopProgressLine loading={avatarUploading} />\r\n        <DialogTitle>Settings</DialogTitle>\r\n        <DialogContent>\r\n          <AvatarWrapper>\r\n            <input\r\n              ref={this.avatarInput}\r\n              type=\"file\"\r\n              accept=\"image/png, image/jpg, image/jpeg\"\r\n              onChange={this.onChangeAvatar}\r\n              style={{ display: 'none' }}\r\n            />\r\n            <Avatar\r\n              src={avatar.src}\r\n              alt={avatar.text}\r\n              onClick={this.onAvatarClick}\r\n            >\r\n              <CameraIcon fontSize=\"large\" />\r\n            </Avatar>\r\n          </AvatarWrapper>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nSettingsDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  toggle: PropTypes.func.isRequired,\r\n  avatar: PropTypes.shape({\r\n    src: PropTypes.string,\r\n    text: PropTypes.string,\r\n  }).isRequired,\r\n  avatarUploading: PropTypes.bool.isRequired,\r\n  uploadAvatar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SettingsDialog;\r\n"],"sourceRoot":""}