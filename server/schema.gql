scalar Date

enum Status {
  OFFLINE
  ONLINE
}

type Friend {
  userId: ID!
  name: String
}

type User {
  id: ID!
  login: String!
  email: String!
  firstName: String
  lastName: String
  birthday: Date
  status: Status
  createDate: Date!
  lastDate: Date!
  friends: [Friend]
}

type AuthPayload {
  token: String
  user: User
}

input RegForm {
  login: String!
  email: String!
  password: String!
  firstName: String
  lastName: String
  birthday: Date
}

type Query {
  user(id: ID!): User
  users: [User]
}

type Mutation {
  signIn(login: String!, password: String!): AuthPayload
  signUp(form: RegForm!): User  
}
