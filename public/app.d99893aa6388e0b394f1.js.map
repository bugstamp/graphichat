{"version":3,"sources":["webpack:///./src/styles/index.js","webpack:///./src/assets/images/login-bg.jpg","webpack:///./src/components/common/Home.js","webpack:///./src/components/common/Form/FormInput.js","webpack:///./src/components/common/Form/FormInputPassword.js","webpack:///./src/components/common/Form/AsyncFormInput.js","webpack:///./src/components/common/Form/FormSubmit.js","webpack:///./src/components/common/Form/Form.js","webpack:///./src/components/common/Notification.js","webpack:///./src/components/common/LoginForm.js","webpack:///./src/components/common/Login.js","webpack:///./src/components/common/NotFound.js","webpack:///./src/components/ui/PageLoader.js","webpack:///./src/router/AppRoute.js","webpack:///./src/router/index.js","webpack:///./src/components/App.js","webpack:///./src/index.js"],"names":["getStyledProps","path","props","lodash_get__WEBPACK_IMPORTED_MODULE_1___default","getPadding","num","arguments","length","undefined","defaultPadding","concat","theme","createMuiTheme","typography","useNextVariants","GlobalStyle","createGlobalStyle","_templateObject","reset","size","module","exports","__webpack_require__","p","Wrapper","styled","div","withConfig","displayName","componentId","GET_ME","gql","Home","Component","react_default","a","createElement","react_apollo_browser_umd","query","_ref","loading","error","data","console","log","getMe","InputWrapper","FormControl","FormInput","value","name","label","type","placeholder","required","autoComplete","isError","onChange","onBlur","rest","_objectWithoutProperties","key","fullWidth","InputLabel_default","htmlFor","Input_default","_extends","id","FormHelperText_default","FormInputPassword","showPassword","_this","setState","PureComponent","this","state","validType","Form_FormInput","FormInputPassword_extends","endAdornment","InputAdornment_default","position","IconButton_default","onClick","toggleShowPassword","VisibilityRounded_default","VisibilityOffRounded_default","AsyncFormInput","event","_this$props","mutation","target","variables","field","_this$props2","asyncProcessing","asyncResult","AsyncFormInput_objectWithoutProperties","AsyncFormInput_extends","handleBlur","CircularProgress_default","CheckRounded_default","color","SubmitButton","Button","FormSubmit","text","variant","disabled","FormWrapper","form","Form","formFields","asyncFields","errors","values","touched","onSubmit","preventDefault","map_default","includes_default","Form_AsyncFormInput","Form_extends","Form_FormInputPassword","Form_FormSubmit","NotificationMessageIcon","Error_default","Warning_default","NotificationMessageWrapper","NotificationContentWrapper","SnackbarContent","amber","NotificationMessage","_ref2","message","Notification_NotificationMessageIcon","NotificationClose","_ref3","toggle","aria-label","Close_default","NotificationContent","_ref4","aria-describedby","Notification_NotificationMessage","action","Notification_NotificationClose","Notification","_ref5","open","Notification_objectWithoutProperties","Snackbar_default","Notification_extends","onClose","reason","anchorOrigin","horizontal","vertical","autoHideDuration","TransitionProps","direction","Notification_NotificationContent","SIGN_IN","LoginForm_templateObject","SIGN_IN_BY_SOCIAL","_templateObject2","SIGN_UP_ASYNC_VALIDATION","_templateObject3","Paper","Header","Typography","SignUpButton","SocialContainer","SocialNote","SocialButton","Fab","Social","brandColor","rgba","formConfig","signin","initial","formValidationSchemas","yup","shape","transform_default","res","min","max","formInitialValues","val","socialIcons","brand","iconElement","faFacebook","faGoogle","LoginForm","LoginForm_classCallCheck","LoginForm_getPrototypeOf","call","LoginForm_defineProperty","LoginForm_assertThisInitialized","alert","_ref6","token","refreshToken","history","localStorage","setItem","push","formId","initialValues","formValidationSchema","_this2","update","cache","_ref7","signIn","signInSuccess","onError","_ref8","graphQLErrors","toggleAlert","_ref9","LoginForm_Wrapper","elevation","align","gutterBottom","AccountCircleRounded_default","fontSize","formik_esm","validationSchema","_ref10","username","password","_ref11","handleChange","handleSubmit","setFieldError","_ref12","_graphQLErrors$","invalidField","extensions","exception","signUpAsyncValidation","_ref13","asyncValidationProcessing","common_Form_Form","signUp","_ref14","signInBySocial","_ref15","_ref16","socialLoading","_ref17","google_login_default","scope","clientId","process","onSuccess","_ref18","_ref18$profileObj","profileObj","googleId","email","social","profile","render","_ref19","index_es","icon","facebook_login_render_props_default","fields","appId","callback","_ref20","userID","_ref21","common_Notification","withRouter","Grid","backgrounds","bgImage","Login","Login_Wrapper","ref","createRef","justify","alignItems","container","common_LoginForm","NotFound","NotFound_Wrapper","PageLoader","PageLoader_Wrapper","AppRoute","component","Layout","layout","privateRoute","AppRoute_objectWithoutProperties","Route","AppRoute_extends","getItem","Redirect","to","react","LoginLayout","Loadable","loader","e","then","bind","ChatLayout","Routes","Switch","router_AppRoute","exact","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_hot_loader__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_router__WEBPACK_IMPORTED_MODULE_4__","_styles__WEBPACK_IMPORTED_MODULE_5__","hot","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","react_dom__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","react_apollo__WEBPACK_IMPORTED_MODULE_4__","apollo_client__WEBPACK_IMPORTED_MODULE_5__","apollo_link_http__WEBPACK_IMPORTED_MODULE_6__","apollo_link__WEBPACK_IMPORTED_MODULE_7__","apollo_link_error__WEBPACK_IMPORTED_MODULE_8__","apollo_cache_inmemory__WEBPACK_IMPORTED_MODULE_9__","_components_App__WEBPACK_IMPORTED_MODULE_10__","httpLink","createHttpLink","uri","authLink","ApolloLink","operation","forward","setContext","headers","x-token","x-refresh-token","tokenLink","map","response","getContext","get","errorLink","_ref$networkError","networkError","logger","operationName","result","client","ApolloClient","link","from","credentials","InMemoryCache","App","document","getElementById"],"mappings":"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","file":"app.d99893aa6388e0b394f1.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport reset from 'styled-reset';\r\nimport { size } from 'polished';\r\nimport { get } from 'lodash';\r\n\r\nexport const getStyledProps = path => props => get(props, path);\r\nexport const getPadding = (num = 1) => (props) => {\r\n  const defaultPadding = getStyledProps('theme.spacing.unit')(props);\r\n  const padding = defaultPadding * num;\r\n\r\n  return `${padding}px`;\r\n};\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${reset}\r\n\r\n  html,\r\n  body {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  body {\r\n    min-height: 100%;\r\n    font-family: ${getStyledProps('theme.typography.fontFamily')};\r\n    font-size: ${getStyledProps('theme.typography.fontSize')}px;\r\n    font-weight: ${getStyledProps('theme.typography.fontWeightRegular')};\r\n    color: #000;\r\n    background-color: #fff;\r\n    overflow-y: auto;\r\n\r\n    #root {\r\n      ${size('inherit')};\r\n      display: flex;\r\n    }\r\n  }\r\n`;\r\n","module.exports = __webpack_public_path__ + \"assets/images/login-bg.jpg\";","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Query } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\n\r\nconst Wrapper = styled.div`\r\n  flex: 1 auto;\r\n`;\r\n\r\nconst GET_ME = gql`\r\n  query GetMe {\r\n    getMe {\r\n      username\r\n      email\r\n      displayName\r\n      firstName\r\n      lastName\r\n      birthday\r\n      gender\r\n      status\r\n      lastDate\r\n    }\r\n  }\r\n`;\r\n\r\nclass Home extends Component {\r\n  state = {}\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Query query={GET_ME}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return 'Loading...';\r\n            if (error) {\r\n              return 'Error...';\r\n            }\r\n            console.log(data.getMe);\r\n\r\n            return 'Home';\r\n          }}\r\n        </Query>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst InputWrapper = styled(FormControl)`\r\n  && {\r\n    margin-bottom: 1em;\r\n  }\r\n`;\r\n\r\nconst FormInput = ({\r\n  value,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n  required,\r\n  autoComplete,\r\n  error,\r\n  isError,\r\n  onChange,\r\n  onBlur,\r\n  ...rest,\r\n}) => {\r\n  return (\r\n    <InputWrapper key={name} fullWidth>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Input\r\n        id={name}\r\n        type={type}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        required={required}\r\n        autoComplete={autoComplete}\r\n        error={isError}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        {...rest}\r\n      />\r\n      <If condition={isError}>\r\n        <FormHelperText error={isError}>{error}</FormHelperText>\r\n      </If>\r\n    </InputWrapper>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/VisibilityRounded';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOffRounded';\r\n\r\nimport FormInput from './FormInput';\r\n\r\nclass FormInputPassword extends PureComponent {\r\n  state = {\r\n    showPassword: false,\r\n  }\r\n\r\n  toggleShowPassword = () => {\r\n    this.setState(({ showPassword }) => ({ showPassword: !showPassword }));\r\n  }\r\n\r\n  render() {\r\n    const { showPassword } = this.state;\r\n    const { type } = this.props;\r\n    const validType = showPassword ? 'text' : type;\r\n\r\n    return (\r\n      <FormInput\r\n        {...this.props}\r\n        type={validType}\r\n        endAdornment={(\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={this.toggleShowPassword}>\r\n              <Choose>\r\n                <When condition={showPassword}>\r\n                  <VisibilityIcon />\r\n                </When>\r\n                <Otherwise>\r\n                  <VisibilityOffIcon />\r\n                </Otherwise>\r\n              </Choose>\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormInputPassword;\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport CheckIcon from '@material-ui/icons/CheckRounded';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport FormInput from './FormInput';\r\n\r\nclass AsyncFormInput extends PureComponent {\r\n  handleBlur = (event) => {\r\n    const { name, onBlur, mutation } = this.props;\r\n    const { target: { value } } = event;\r\n\r\n    onBlur(event);\r\n    mutation({ variables: { field: name, value } });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      asyncProcessing,\r\n      asyncResult,\r\n      mutation,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    return (\r\n      <FormInput\r\n        {...rest}\r\n        onBlur={this.handleBlur}\r\n        endAdornment={\r\n          (asyncProcessing || asyncResult) && (\r\n            <InputAdornment position=\"end\">\r\n              <Choose>\r\n                <When condition={asyncProcessing}>\r\n                  <CircularProgress size={18} />\r\n                </When>\r\n                <When condition={!asyncProcessing && asyncResult}>\r\n                  <CheckIcon color=\"action\" />\r\n                </When>\r\n                <Otherwise>{null}</Otherwise>\r\n              </Choose>\r\n            </InputAdornment>\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default AsyncFormInput;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst SubmitButton = styled(Button)`\r\n  && {\r\n    position: relative;\r\n    margin-top: 1em;\r\n  }\r\n`;\r\n\r\nconst FormSubmit = ({ onClick, loading, text }) => (\r\n  <SubmitButton\r\n    color=\"primary\"\r\n    size=\"large\"\r\n    variant=\"contained\"\r\n    onClick={onClick}\r\n    disabled={loading}\r\n    fullWidth\r\n  >\r\n    <Choose>\r\n      <When condition={loading}>\r\n        <CircularProgress size={26} />\r\n      </When>\r\n      <Otherwise>\r\n        {text}\r\n      </Otherwise>\r\n    </Choose>\r\n  </SubmitButton>\r\n);\r\n\r\nexport default FormSubmit;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { map, includes } from 'lodash';\r\n\r\nimport FormInput from './FormInput';\r\nimport FormInputPassword from './FormInputPassword';\r\nimport AsyncFormInput from './AsyncFormInput';\r\nimport FormSubmit from './FormSubmit';\r\n\r\nconst FormWrapper = styled.form`\r\n  width: 100%;\r\n`;\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    showPassword: false,\r\n  }\r\n\r\n  toggleShowPassword = () => {\r\n    this.setState(({ showPassword }) => ({ showPassword: !showPassword }));\r\n  }\r\n\r\n  render() {\r\n    const { showPassword } = this.state;\r\n    const {\r\n      formFields,\r\n      asyncFields,\r\n      values,\r\n      errors,\r\n      touched,\r\n      onChange,\r\n      onBlur,\r\n      onSubmit,\r\n      loading,\r\n      mutation,\r\n      asyncResult,\r\n      asyncProcessing,\r\n    } = this.props;\r\n\r\n    return (\r\n      <FormWrapper onSubmit={(event) => { event.preventDefault(); }}>\r\n        {\r\n          map(formFields, (field) => {\r\n            const { name, type } = field;\r\n            const isError = errors[name] && touched[name];\r\n            const error = errors[name];\r\n\r\n            return (\r\n              <Choose>\r\n                <When condition={includes(asyncFields, name)}>\r\n                  <AsyncFormInput\r\n                    {...field}\r\n                    key={name}\r\n                    isError={isError}\r\n                    error={error}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    mutation={mutation}\r\n                    asyncResult={asyncResult}\r\n                    asyncProcessing={asyncProcessing}\r\n                  />\r\n                </When>\r\n                <When condition={type === 'password'}>\r\n                  <FormInputPassword\r\n                    {...field}\r\n                    key={name}\r\n                    isError={isError}\r\n                    error={error}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                  />\r\n                </When>\r\n                <Otherwise>\r\n                  <FormInput\r\n                    {...field}\r\n                    key={name}\r\n                    isError={isError}\r\n                    error={error}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                  />\r\n                </Otherwise>\r\n              </Choose>\r\n            );\r\n          })\r\n        }\r\n        <FormSubmit\r\n          onClick={onSubmit}\r\n          loading={loading}\r\n          text=\"Sign In\"\r\n        />\r\n      </FormWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { PureComponent } from 'react';\r\nimport styled from 'styled-components';\r\n// import {} from 'polished';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import InfoIcon from '@material-ui/icons/Info';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport amber from '@material-ui/core/colors/amber';\r\n\r\nimport { getStyledProps } from '../../styles';\r\n\r\nconst NotificationMessageIcon = ({ type }) => (\r\n  <Choose>\r\n    <When condition={type === 'error'}>\r\n      <ErrorIcon />\r\n    </When>\r\n    <When condition={type === 'warning'}>\r\n      <WarningIcon />\r\n    </When>\r\n    <Otherwise>{null}</Otherwise>\r\n  </Choose>\r\n);\r\n\r\nconst NotificationMessageWrapper = styled.p`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  color: #fff;\r\n\r\n  span {\r\n    margin-left: 1em;\r\n  }\r\n`;\r\n\r\nconst NotificationContentWrapper = styled(SnackbarContent)`\r\n  && {\r\n    background-color: ${(props) => {\r\n    const { type } = props;\r\n\r\n    if (type === 'error') {\r\n      return getStyledProps('theme.palette.error.main')(props);\r\n    }\r\n    return amber[500];\r\n  }}}\r\n`;\r\n\r\nconst NotificationMessage = ({ type, message }) => (\r\n  <NotificationMessageWrapper>\r\n    <NotificationMessageIcon type={type} />\r\n    <span>\r\n      {message}\r\n    </span>\r\n  </NotificationMessageWrapper>\r\n);\r\n\r\nconst NotificationClose = ({ toggle }) => (\r\n  <IconButton\r\n    key=\"close\"\r\n    aria-label=\"Close\"\r\n    color=\"inherit\"\r\n    onClick={toggle}\r\n  >\r\n    <CloseIcon />\r\n  </IconButton>\r\n);\r\n\r\nconst NotificationContent = ({ type, message, toggle }) => (\r\n  <NotificationContentWrapper\r\n    type={type}\r\n    aria-describedby=\"alert-notification\"\r\n    message={<NotificationMessage key=\"message\" type={type} message={message} />}\r\n    action={[<NotificationClose key=\"close\" toggle={toggle} />]}\r\n  />\r\n);\r\n\r\nconst Notification = ({ type, message, open, toggle, ...rest }) => (\r\n  <Snackbar\r\n    open={open}\r\n    onClose={(event, reason) => {\r\n      if (reason === 'timeout' && !open) {\r\n        return;\r\n      }\r\n      toggle();\r\n    }}\r\n    anchorOrigin={{\r\n      horizontal: 'right',\r\n      vertical: 'top',\r\n    }}\r\n    autoHideDuration={4000}\r\n    TransitionProps={{\r\n      direction: 'left',\r\n    }}\r\n    {...rest}\r\n  >\r\n    <NotificationContent type={type} message={message} toggle={toggle} />\r\n  </Snackbar>\r\n);\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router';\r\nimport { Mutation } from 'react-apollo';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport GoogleLogin from 'react-google-login';\r\nimport gql from 'graphql-tag';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport styled from 'styled-components';\r\nimport { position, rgba } from 'polished';\r\nimport { map, transform } from 'lodash';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFacebook, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport Form from './Form/Form';\r\nimport Notification from './Notification';\r\n\r\nimport { getStyledProps, getPadding } from '../../styles';\r\n\r\nconst SIGN_IN = gql`\r\n  mutation SignIn($username: String!, $password: String!) {\r\n    signIn(username: $username, password: $password) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nconst SIGN_IN_BY_SOCIAL = gql`\r\n  mutation SignInBySocial($social: String!, $profile: SocialProfile!) {\r\n    signInBySocial(social: $social, profile: $profile) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nconst SIGN_UP_ASYNC_VALIDATION = gql`\r\n  mutation SignUpAsyncValidation($field: String!, $value: String!) {\r\n    signUpAsyncValidation(field: $field, value: $value) {\r\n      field\r\n      valid\r\n    }\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled(Paper)`\r\n  && {\r\n    width: 100%;\r\n    max-width: 375px;\r\n    min-width: 320px;\r\n  padding: ${getPadding(5)} ${getPadding(3)};\r\n  }\r\n`;\r\n\r\nconst Header = styled(Typography)`\r\n  width: 100%;\r\n  position: relative;\r\n  text-align: center;\r\n`;\r\n\r\nconst SignUpButton = styled(Button)`\r\n  && {\r\n    margin-top: 1em;\r\n  }\r\n`;\r\n\r\nconst SocialContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 3em;\r\n`;\r\n\r\nconst SocialNote = styled.p`\r\n  display: inline-flex;\r\n  margin-right: 1em;\r\n`;\r\n\r\nconst SocialButton = styled(Fab)`\r\n  && {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Social = styled.div`\r\n  display: inline-flex;\r\n\r\n  :not(:last-child) {\r\n    margin-right: 1em;\r\n  }\r\n\r\n  ${SocialButton} {\r\n  background-color: ${({ brandColor }) => brandColor};\r\n\r\n    :hover {\r\n  background-color: ${({ brandColor }) => rgba(brandColor, 0.8)};\r\n    }\r\n  }\r\n`;\r\n\r\nconst formConfig = {\r\n  signin: [{\r\n    name: 'username',\r\n    label: 'User name / Email address',\r\n    type: 'text',\r\n    autoComplete: 'on',\r\n    required: true,\r\n    initial: '',\r\n  }, {\r\n    name: 'password',\r\n    label: 'Password',\r\n    type: 'password',\r\n    autoComplete: 'on',\r\n    required: true,\r\n    initial: '',\r\n  }],\r\n};\r\n\r\nconst formValidationSchemas = {\r\n  signin: yup.object().shape(transform(formConfig.signin, (res, { name }) => {\r\n    // eslint-disable-next-line\r\n    switch (name) {\r\n      case 'username': {\r\n        res[name] = yup.string().required('*required');\r\n        break;\r\n      }\r\n      case 'password': {\r\n        res[name] = yup.string()\r\n          .min(6)\r\n          .max(20)\r\n          .required('*required');\r\n        break;\r\n      }\r\n    }\r\n  }), {}),\r\n};\r\n\r\nconst formInitialValues = transform(formConfig, (form, val, key) => {\r\n  form[key] = transform(val, (field, { name, initial }) => {\r\n    field[name] = initial;\r\n  }, {});\r\n}, {});\r\n\r\nconst socialIcons = [\r\n  {\r\n    brand: 'facebook',\r\n    color: '#3232ff',\r\n    iconElement: faFacebook,\r\n  },\r\n  {\r\n    brand: 'google',\r\n    color: '#ff3232',\r\n    iconElement: faGoogle,\r\n  },\r\n];\r\n\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      alert: {\r\n        open: false,\r\n        message: '',\r\n      },\r\n    };\r\n\r\n    this.formId = 'signin';\r\n    this.initialValues = formInitialValues[this.formId];\r\n    this.formFields = formConfig[this.formId];\r\n    this.formValidationSchema = formValidationSchemas[this.formId];\r\n  }\r\n\r\n  toggleAlert = (message = '') => {\r\n    this.setState(({ alert }) => ({\r\n      alert: {\r\n        open: !alert.open,\r\n        message,\r\n      },\r\n    }));\r\n  }\r\n\r\n  signInSuccess = ({ token, refreshToken }) => {\r\n    const { history } = this.props;\r\n\r\n    localStorage.setItem('chatkilla_tkn', token);\r\n    localStorage.setItem('chatkilla_rfrsh_tkn', refreshToken);\r\n    history.push('/');\r\n  }\r\n\r\n  signUp = () => {\r\n    const { history } = this.props;\r\n\r\n    history.push('/login/new');\r\n  }\r\n\r\n  render() {\r\n    const { alert } = this.state;\r\n\r\n    return (\r\n      <Mutation\r\n        mutation={SIGN_IN}\r\n        update={(cache, { data: { signIn } }) => {\r\n          this.signInSuccess(signIn);\r\n        }}\r\n        onError={({ graphQLErrors }) => {\r\n          this.toggleAlert(graphQLErrors[0].message);\r\n        }}\r\n      >\r\n        {(signIn, { loading }) => {\r\n          return (\r\n            <Wrapper elevation={8}>\r\n              <Header variant=\"h1\" color=\"primary\" align=\"center\" gutterBottom>\r\n                <AccountCircleIcon fontSize=\"inherit\" color=\"primary\" />\r\n              </Header>\r\n              <Formik\r\n                initialValues={this.initialValues}\r\n                validationSchema={this.formValidationSchema}\r\n                onSubmit={({ username, password }) => signIn({ variables: { username, password } })}\r\n              >\r\n                {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  setFieldError,\r\n                }) => {\r\n                  return (\r\n                    <Mutation\r\n                      mutation={SIGN_UP_ASYNC_VALIDATION}\r\n                      onError={({ graphQLErrors }) => {\r\n                        const { message, extensions } = graphQLErrors[0];\r\n                        const { exception: { invalidField } } = extensions;\r\n\r\n                        setFieldError(invalidField, message);\r\n                      }}\r\n                    >\r\n                      {(signUpAsyncValidation, { loading: asyncValidationProcessing, data }) => (\r\n                        <Form\r\n                          formFields={this.formFields}\r\n                          loading={loading}\r\n                          values={values}\r\n                          errors={errors}\r\n                          touched={touched}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          onSubmit={handleSubmit}\r\n                          mutation={signUpAsyncValidation}\r\n                          asyncFields={['username']}\r\n                          asyncResult={data}\r\n                          asyncProcessing={asyncValidationProcessing}\r\n                        />\r\n                      )}\r\n                    </Mutation>\r\n                  );\r\n                }}\r\n              </Formik>\r\n              <SignUpButton\r\n                onClick={this.signUp}\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                {'Sign Up'}\r\n              </SignUpButton>\r\n              <Mutation\r\n                mutation={SIGN_IN_BY_SOCIAL}\r\n                update={(cache, { data: { signInBySocial } }) => {\r\n                  this.signInSuccess(signInBySocial);\r\n                }}\r\n                onError={({ graphQLErrors }) => {\r\n                  this.toggleAlert(graphQLErrors[0].message);\r\n                }}\r\n              >\r\n                {(signInBySocial, { loading: socialLoading }) => {\r\n                  return (\r\n                    <SocialContainer>\r\n                      <SocialNote>\r\n                        {'Sign in with social media:'}\r\n                      </SocialNote>\r\n                      {\r\n                        map(socialIcons, ({ brand, color, iconElement }) => (\r\n                          <Social\r\n                            key={brand}\r\n                            brand={brand}\r\n                            brandColor={color}\r\n                          >\r\n                            <Choose>\r\n                              <When condition={brand === 'google'}>\r\n                                <GoogleLogin\r\n                                  scope=\"email profile\"\r\n                                  clientId={process.env.GOOGLE_APP_ID}\r\n                                  onSuccess={({ profileObj: { googleId, email } }) => signInBySocial({\r\n                                    variables: {\r\n                                      social: brand,\r\n                                      profile: {\r\n                                        id: googleId,\r\n                                        email,\r\n                                      },\r\n                                    },\r\n                                  })}\r\n                                  render={({ onClick }) => (\r\n                                    <SocialButton disabled={socialLoading} size=\"small\" onClick={onClick}>\r\n                                      <FontAwesomeIcon icon={iconElement} size=\"lg\" />\r\n                                    </SocialButton>\r\n                                  )}\r\n                                />\r\n                              </When>\r\n                              <When condition={brand === 'facebook'}>\r\n                                <FacebookLogin\r\n                                  fields=\"id,email\"\r\n                                  appId={process.env.FACEBOOK_APP_ID}\r\n                                  callback={({ userID, email }) => signInBySocial({\r\n                                    variables: {\r\n                                      social: brand,\r\n                                      profile: {\r\n                                        id: userID,\r\n                                        email,\r\n                                      },\r\n                                    },\r\n                                  })}\r\n                                  render={({ onClick }) => (\r\n                                    <SocialButton disabled={socialLoading} size=\"small\" onClick={onClick}>\r\n                                      <FontAwesomeIcon icon={iconElement} size=\"lg\" />\r\n                                    </SocialButton>\r\n                                  )}\r\n                                />\r\n                              </When>\r\n                              <Otherwise>\r\n                                {null}\r\n                              </Otherwise>\r\n                            </Choose>\r\n                          </Social>\r\n                        ))\r\n                      }\r\n                    </SocialContainer>\r\n                  );\r\n                }}\r\n              </Mutation>\r\n              <Notification\r\n                type=\"error\"\r\n                open={alert.open}\r\n                message={alert.message}\r\n                toggle={() => this.toggleAlert()}\r\n              />\r\n            </Wrapper>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LoginForm);\r\n","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styled from 'styled-components';\r\nimport { backgrounds } from 'polished';\r\n\r\nimport LoginForm from './LoginForm';\r\nimport bgImage from '../../assets/images/login-bg.jpg';\r\n\r\nconst Wrapper = styled(Grid)`\r\n  flex: 1 auto;\r\n  ${backgrounds(`url(${bgImage})`, 'center no-repeat')}\r\n  background-size: cover;\r\n`;\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper\r\n        ref={this.createRef}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n      >\r\n        <LoginForm />\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { size } from 'polished';\r\n\r\nconst Wrapper = styled.div`\r\n  ${size('100%')}\r\n  text-align: center;\r\n`;\r\n\r\nconst NotFound = () => (\r\n  <Wrapper>404! Page not found!</Wrapper>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport styled from 'styled-components';\r\nimport { position } from 'polished';\r\n\r\nconst Wrapper = styled.div`\r\n  ${position('absolute', '50%', null, null, '50%')}\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst PageLoader = () => (\r\n  <Wrapper>\r\n    <CircularProgress size={80} />\r\n  </Wrapper>\r\n);\r\n\r\nexport default PageLoader;\r\n","import React, { Fragment } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst AppRoute = ({\r\n  component: Component,\r\n  layout: Layout,\r\n  privateRoute,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      <Choose>\r\n        <When condition={privateRoute && !localStorage.getItem('chatkilla_tkn')}>\r\n          <Redirect to=\"login\" />\r\n        </When>\r\n        <When condition={!Layout}>\r\n          <Fragment>\r\n            <Component {...props} />\r\n          </Fragment>\r\n        </When>\r\n        <Otherwise>\r\n          <Layout>\r\n            <Component {...props} />\r\n          </Layout>\r\n        </Otherwise>\r\n      </Choose>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default AppRoute;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\n\r\n// import LoginLayout from '../components/layouts/LoginLayout';\r\n// import ChatLayout from '../components/layouts/ChatLayout';\r\n\r\nimport Home from '../components/common/Home';\r\nimport Login from '../components/common/Login';\r\nimport NotFound from '../components/common/NotFound';\r\nimport PageLoader from '../components/ui/PageLoader';\r\n\r\nimport AppRoute from './AppRoute';\r\n\r\nconst LoginLayout = Loadable({\r\n  loader: () => import('../components/layouts/LoginLayout'),\r\n  loading: PageLoader,\r\n});\r\n\r\nconst ChatLayout = Loadable({\r\n  loader: () => import('../components/layouts/ChatLayout'),\r\n  loading: PageLoader,\r\n});\r\n\r\n// const NotFound = Loadable({\r\n//   loader: () => import('../components/common/NotFound'),\r\n//   loading: PageLoader,\r\n// });\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <AppRoute exact path=\"/login\" layout={LoginLayout} component={Login} />\r\n    <AppRoute exact path=\"/\" layout={ChatLayout} component={Home} privateRoute />\r\n    <AppRoute component={NotFound} />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { Fragment } from 'react';\r\nimport { hot } from 'react-hot-loader';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport Router from '../router';\r\nimport { GlobalStyle, theme } from '../styles';\r\n\r\nconst App = () => {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <ThemeProvider theme={theme}>\r\n        <Fragment>\r\n          <GlobalStyle />\r\n          <Router />\r\n        </Fragment>\r\n      </ThemeProvider>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default hot(module)(App);\r\n","import 'whatwg-fetch';\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { ApolloLink, from } from 'apollo-link';\r\nimport { onError } from 'apollo-link-error';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\n// import registerServiceWorker from './registerServiceWorker';\r\n\r\nimport App from './components/App';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.APOLLO_URL,\r\n});\r\n\r\nconst authLink = new ApolloLink((operation, forward) => {\r\n  operation.setContext({\r\n    headers: {\r\n      'x-token': localStorage.getItem('chatkilla_tkn') || null,\r\n      'x-refresh-token': localStorage.getItem('chatkilla_rfrsh_tkn') || null,\r\n    },\r\n  });\r\n  return forward(operation);\r\n});\r\n\r\nconst tokenLink = new ApolloLink((operation, forward) => {\r\n  return forward(operation).map((response) => {\r\n    const { response: { headers } } = operation.getContext();\r\n    console.log(response);\r\n\r\n    if (headers) {\r\n      const token = headers.get('x-token');\r\n      const refreshToken = headers.get('x-refresh-token');\r\n\r\n      if (token && refreshToken) {\r\n        localStorage.setItem('chatkilla_tkn', token);\r\n        localStorage.setItem('chatkilla_rfrsh_tkn', refreshToken);\r\n      }\r\n    }\r\n    return response;\r\n  });\r\n});\r\n\r\nconst errorLink = onError(({ networkError = {}, graphQLErrors }) => {\r\n  console.log('networkerrors', networkError);\r\n  console.log('error', graphQLErrors);\r\n});\r\n\r\nconst logger = new ApolloLink((operation, forward) => {\r\n  console.log(`operation: ${operation.operationName}`, operation);\r\n  return forward(operation).map((result) => {\r\n    console.log(`Result from ${operation.operationName}:`, result);\r\n    return result;\r\n  })\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: from([\r\n    errorLink,\r\n    tokenLink,\r\n    authLink,\r\n    logger,\r\n    httpLink,\r\n  ]),\r\n  credentials: 'include',\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nconst renderApp = (Component) => {\r\n  render(\r\n    <ApolloProvider client={client}>\r\n      <BrowserRouter>\r\n        <Component />\r\n      </BrowserRouter>\r\n    </ApolloProvider>, document.getElementById('root'),\r\n  );\r\n};\r\n\r\nrenderApp(App);\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}